
source("https://raw.githubusercontent.com/markziemann/SLE712_files/master/bioinfo_asst3_part2_files/mutblast_functions.R")

#question1

#E.COLI GENE SEQUENCE
download.file("ftp://ftp.ensemblgenomes.org/pub/bacteria/release-42/fasta/bacteria_0_collection/escherichia_coli_str_k_12_substr_mg1655/cds/Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa.gz",destfile = "Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa.gz")

#DECOMPRESS
R.utils::gunzip("Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa.gz",overwrite=TRUE)

#Blast database
library("rBLAST")
makeblastdb("Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa",dbtype = "nucl","-parse_seqids")

#Sequences present
str("Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa.gz")
seqinr::getLength("Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa.gz")

#question2

#download and reading sequence length festa file
E.COLI <-seqinr::read.fasta("https://raw.githubusercontent.com/markziemann/SLE712_files/master/bioinfo_asst3_part2_files/sample.fa")
str(E.COLI)

#read the festa file
E.COLI<-seqinr::read.fasta("Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa")

#selecting gene of interest
geneofinterest <- E.COLI[[10]]

#determining the length
seqinr:: getLength(geneofinterest)

#proportion of GC
seqinr::GC(geneofinterest)

#question3
myblastn_tab
pin <- myblastn_tab(myseq = E.COLI, db = "Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa")
str(pin)
head(pin)


#determing first 3 hits
Hits <- as.character(pin$sseqid[1:3])
Hits

#extraction of top hits
nit <- read.fasta("Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa")
str(nit)
str(nit[1:6])
head(names(nit))

#extraction of names of top hits
myseqs <- nit[which(names(nit) %in% Hits)]
myseqs <-c(myseqs,E.COLI)
seqinr:: write.fasta (E.COLI,names = names(myseqs), file.out="myseqs.fa")
str(myseqs)

#extract the names of top hits
tophit <- nit[which(names(nit) %in% Hits[1])]
tophit[1:3]

#bit scores and percent
seqinr::write.fasta(tophit,names=names(tophit),file.out = "tophit.fa")
makeblastdb("tophit.fa",dbtype="nucl", "-parse_seqids")
pin <- myblastn(myseq = E.COLI, db = "tophit.fa")
cat(pin,fill=TRUE)

#question 4
mutator(geneofinterest,20)
mutatedone <-mutator(geneofinterest,20)
myblastn_tab(mutatedone, db ="Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa")

#Question-5


myfunction <- function(geneofinterest,nmut = nmut) {
mutseq <- mutator( myseq= geneofinterest, nmut = nmut)
res <- myblastn_tab(myseq = mutseq, db= "Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa")
if (is.null(res)) {myres= 0} else {myres = 1}
return(myres)
}

replicate(n=101, expr = myfunction(geneofinterest,100) )
mean(replicate(n=101, myfunction(geneofinterest,100)))
str(mean)

n <- c(100 , 200 , 300 , 400)
finalres <- function (n){mean (replicate(n, myfunction(geneofinterest,100)))}
sapply( n, finalres)

#Question 6

plot(n, sapply(n, finalres), type = "l", lty = 1)
